
    model {

  #---------------------------------------------
  # NATIONAL POPULATION PROCESS
  #---------------------------------------------
  
  process_sd ~ dunif(0,2)
  # intercept <- 0
  # slope ~ dnorm(0,0.1)
  # for (t in 1:nyear){
  #   logNsum[t] <- slope * (t-1)
  #   Nsum[t] <- exp(logNsum[t])
  # }
  
  logNsum[1] <- 0
  for (t in 2:nyear){
    logNsum[t] ~ dnorm(logNsum[t-1],pow(process_sd,-2))
  }
  for (t in 1:nyear){Nsum[t] <- exp(logNsum[t])}
  #---------------------------------------------
  # SITE-LEVEL POPULATION PROCESS
  #---------------------------------------------
  
  for (s in 1:nsite){
  
    log_rho[s] ~ dnorm(0,0.01)
    annual_sd[s] ~ dunif(0,2)
    
    for (t in 1:nyear){
      logN[s,t] ~ dnorm(log(Nsum[t]*exp(log_rho[s])),pow(annual_sd[s],-2) )
      N[s,t] <- exp(logN[s,t])
    }
    
    
    #---------------------------------------------
    # Parameters for within-season dynamics at each site
    #---------------------------------------------
  
    # Migration phenology at each site
    migration_phenology_mean[s] ~ dunif(1,360) # Date of peak migration
    migration_phenology_sd[s] ~ dunif(0,20)    # Width of migration period
    
    # Daily overdispersion in counts at each site (e.g., due to daily weather)
    siteday_sd[s] ~ dunif(0,2)

    
  }
  
  for (i in 1:nobs){

    mu[i] <- log(f[i]) + log(N[site[i],year[i]]) + log(net_hrs[i])
    expected_count[i] <- exp(mu[i])

    # Likelihood for counts
    f[i] <-  exp(logdensity.norm(day[i], migration_phenology_mean[site[i]], pow(migration_phenology_sd[site[i]],-2)    ))

    # Add daily overdispersion
    log_lambda[i] ~ dnorm(mu[i], pow(siteday_sd[site[i]],-2))
    count[i] ~ dpois(exp(mu[i]))
    
  }


}
    
